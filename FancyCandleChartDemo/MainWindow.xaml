<!-- 
    Copyright 2019 Dennis Geller.

    This file is part of FancyCandleChartDemo.

    FancyCandleChartDemo is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    FancyCandleChartDemo is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FancyCandleChartDemo.  If not, see <https://www.gnu.org/licenses/>. -->

<Window x:Class="FancyCandleChartDemo.MainWindow"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FancyCandleChartDemo"
        xmlns:fp="clr-namespace:FancyPrimitives;assembly=FancyPrimitives"        
        xmlns:fc="clr-namespace:FancyCandles;assembly=FancyCandles"        
        xmlns:fci="clr-namespace:FancyCandles.Indicators;assembly=FancyCandles"        
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="FancyCandles Demo" Height="850" Width="800">

    <Window.Resources>
        <Style TargetType="fp:DoubleTextBox">
            <Setter Property="Width" Value="30"/>
        </Style>

        <Style TargetType="GroupBox">
            <Setter Property="Control.BorderBrush" Value="Gray"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="FrameworkElement.Margin" Value="0 5 0 0"/>
        </Style>

        <Style x:Key="textblockHelpTTTitle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style x:Key="textblockHelpTTCodeSubTitle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="TextDecorations" Value="Underline"/>
            <Setter Property="Margin" Value="0 10 0 0"/>
        </Style>

        <Style x:Key="textblockHelpTTCode" TargetType="TextBlock">
            <Setter Property="Foreground" Value="DarkGreen"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Margin" Value="15 5 0 0"/>
        </Style>

        <Style x:Key="LeftMargin">
            <Setter Property="FrameworkElement.Margin" Value="5 0 0 0"/>
        </Style>
        
        <Style x:Key="TopMargin">
            <Setter Property="FrameworkElement.Margin" Value="0 5 0 0"/>
        </Style>
        
        <Style x:Key="LeftTopMargin">
            <Setter Property="FrameworkElement.Margin" Value="5 5 0 0"/>
        </Style>

        <Style x:Key="WithHelpTT">
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
            <Setter Property="ToolTipService.ShowDuration" Value="{x:Static s:Int32.MaxValue}"/>
            <Setter Property="ToolTip.Placement" Value="Right"/>
            <Setter Property="ToolTip.HorizontalOffset" Value="10"/>
            <Setter Property="FrameworkElement.Margin" Value="0 5 0 0"/>
            <Setter Property="Control.BorderBrush" Value="Gray"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
        </Style>
        
        <Style x:Key="textblockGroupBoxCodeExample" TargetType="TextBlock">
            <Setter Property="Foreground" Value="DarkGreen"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type GroupBox}}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="stackpanelCodeExample" TargetType="StackPanel">
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextBlock.Foreground" Value="DarkGreen"/>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="TextBlock.FontStyle" Value="Italic"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="0 0 0 1"/>
        </Style>

        <ObjectDataProvider x:Key="hoursProvider" ObjectType="{x:Type local:DateAndTimeDataProvider}" MethodName="GetHours"/>
        <ObjectDataProvider x:Key="minutesProvider" ObjectType="{x:Type local:DateAndTimeDataProvider}" MethodName="GetMinutes"/>

        <DataTemplate x:Key="expanderHeader">
            <TextBlock Text="{Binding}" FontStyle="Italic" TextDecorations="Underline"/>
        </DataTemplate>

        <Style TargetType="Expander">
            <Setter Property="Margin" Value="0 0 0 0" />
            <Setter Property="HeaderTemplate" Value="{StaticResource expanderHeader}" />
        </Style>

        <Style x:Key="ExpanderContent">
            <Setter Property="FrameworkElement.Margin" Value="25 0 0 10" />
        </Style>

        <ObjectDataProvider x:Key="allVerticalAlignmentValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="VerticalAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="allHorizontalAlignmentValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="HorizontalAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <local:BoolAndNotBoolConverter x:Key="bool_and_notBoolConverter"/>
        <local:NotBoolConverter x:Key="notBoolConverter"/>
        <fp:SymStringToNumberConverter x:Key="symStringToNumberConverter"/>
        <fp:SymColorBrushStringConverter x:Key="symColorBrushStringConverter"/>
        <fp:SymStringThicknessConverter x:Key="symStringThicknessConverter"/>
    </Window.Resources>

    <Window.DataContext>
        <local:VM x:Name="dataContextVM"/>
    </Window.DataContext>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- ============================================================================================================================================================== -->
        <Menu Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="0" Height="30">
            <MenuItem Header="Help" Height="30">
                <MenuItem Header="View FancyCandles Documentation" Click="MenuItem_Click"></MenuItem>
                <MenuItem Header="FancyCandles GitHub Repo" Click="MenuItem_Click"></MenuItem>
                <MenuItem Header="FancyCandles NuGet Package" Click="MenuItem_Click"></MenuItem>
                <Separator/>
                <MenuItem Header="FancyCandles Demo GitHub Repo" Click="MenuItem_Click"></MenuItem>
                <MenuItem Header="About FancyCandles Demo" Click="MenuItem_Click"></MenuItem>
            </MenuItem>
        </Menu>
        <!-- ============================================================================================================================================================== -->
        
        <fc:CandleChart x:Name="myCandleChart" 
                        Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" 
                        AddInIndicatorsFolder="ggg\"
                        LegendText="{Binding Path=Ticker}"
                        InitialCandleWidth="7" InitialCandleGap="1" 
                        GapBetweenPriceTickLabels="10"
                        CandlesSource="{Binding Path=Candles}">

            <fc:CandleChart.IsEnabled>
                <MultiBinding Converter="{StaticResource bool_and_notBoolConverter}">
                    <Binding ElementName="isEnabled" Path="IsChecked"/>
                    <Binding Path="IsCandlesLoading"/>
                </MultiBinding>
            </fc:CandleChart.IsEnabled>

            <fc:CandleChart.OverlayIndicators>
                <local:ObservableOverlayIndicatorCollection>
                    <fci:SimpleMovingAverage N="7">
                        <fci:SimpleMovingAverage.Pen>
                            <Pen Thickness="1" Brush="Red" />
                        </fci:SimpleMovingAverage.Pen>
                    </fci:SimpleMovingAverage>

                    <local:ExponentialMovingAverage Smoothing="0.1">
                        <local:ExponentialMovingAverage.Pen>
                            <Pen Thickness="1" Brush="Blue" />
                        </local:ExponentialMovingAverage.Pen>
                    </local:ExponentialMovingAverage>
                </local:ObservableOverlayIndicatorCollection>
            </fc:CandleChart.OverlayIndicators>

        </fc:CandleChart>

        <!-- Wait indicator -->
        <fp:CircleWaitIndicator Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" IsRunning="{Binding Path=IsCandlesLoading}" Height="30" Width="30"/>
        <!-- ============================================================================================================================================================== -->
        <GridSplitter Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" ShowsPreview="False" Height="3" Background="Gray" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
        <!-- ============================================================================================================================================================== -->
        <TextBlock Grid.Column="0" Grid.Row="3" 
                   Text="CandleChart &#160;Properties &#38; Methods" 
                   VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Medium" FontSize="20" FontFamily="Futura bk bt">
            <TextBlock.LayoutTransform>
                <RotateTransform Angle="-90" />
            </TextBlock.LayoutTransform>
        </TextBlock>
        <!-- ============================================================================================================================================================== -->
        <ScrollViewer x:Name="mainScrollViewer" Grid.Column="1" Grid.Row="3" Background="Lavender" Loaded="OnEverythingLoaded">
            <StackPanel Orientation="Vertical" Margin="10 10 10 10">

                <TextBlock Foreground="Red" FontSize="14">
                    <Span FontWeight="Bold">NEW!!!</Span>
                    <Span>Right-Click on the chart area to call the context menu!</Span>
                </TextBlock>
                
                <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                    <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_TimeFrame" RequestNavigate="Hyperlink_RequestNavigate">TimeFrame</Hyperlink> =&#160;</TextBlock>
                    <TextBlock Text="{Binding ElementName=myCandleChart, Path=TimeFrame}"/>

                    <StackPanel.ToolTip>
                        <StackPanel>
                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public int TimeFrame { get; }</TextBlock>
                            <TextBlock>Gets the automatically determined timeframe of this chart in minutes.</TextBlock>
                        </StackPanel>
                    </StackPanel.ToolTip>
                </StackPanel>

                <GroupBox HorizontalAlignment="Left" Style="{StaticResource WithHelpTT}">
                    <GroupBox.Header>
                        <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_CandlesSource" RequestNavigate="Hyperlink_RequestNavigate">CandlesSource</Hyperlink> =&#160;</TextBlock>
                    </GroupBox.Header>

                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel>
                                    <TextBlock Text="Data from embedded resource text file:" Margin="0 5 5 0"/>
                                    <ListBox x:Name="selectCandlesFromFile" SelectionChanged="SetCandlesFromEmbeddedResourceTextFile" SelectionMode="Single" SelectedIndex="0" Margin="0 0 0 0" HorizontalAlignment="Stretch">
                                        <ListBoxItem>stock_A_m5.txt</ListBoxItem>
                                        <ListBoxItem>stock_B_m5.txt</ListBoxItem>
                                    </ListBox>
                                </StackPanel>

                                <TextBlock Text="or" Margin="20 0 20 0" VerticalAlignment="Center"/>

                                <StackPanel>
                                    <TextBlock Text="Data from outer REST API:" Margin="0 5 5 0"/>
                                    <ListBox x:Name="selectCandlesFromWeb" SelectionChanged="SetCandlesFromWeb" SelectionMode="Single" SelectedIndex="-1" Margin="0 0 0 0" HorizontalAlignment="Stretch">
                                        <ListBoxItem>btcusd</ListBoxItem>
                                        <ListBoxItem>ethusd</ListBoxItem>
                                    </ListBox>
                                </StackPanel>
                            </StackPanel>
                            <TextBlock Style="{StaticResource LeftTopMargin}">See also: <Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/articles/populating_candlestick_chart.html" RequestNavigate="Hyperlink_RequestNavigate">How to populate CandleChart with candles</Hyperlink></TextBlock>
                        </StackPanel>
                    </Grid>

                    <GroupBox.ToolTip>
                        <StackPanel>
                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public ObservableCollection&lt;ICandle&gt; CandlesSource { get; set; }</TextBlock>
                            <TextBlock>Gets or sets the data source for the candles of this chart.</TextBlock>
                        </StackPanel>
                    </GroupBox.ToolTip>
                </GroupBox>

                <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                    <TextBlock VerticalAlignment="Center"><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_TimeTickFontSize" RequestNavigate="Hyperlink_RequestNavigate">TimeTickFontSize</Hyperlink> =&#160;</TextBlock>
                    <fp:EditableDoubleComboBox x:Name="timeTickFontSize"
                                               MinValue="0" VerticalAlignment="Bottom"
                                               Text="{Binding ElementName=myCandleChart, Path=TimeTickFontSize, Converter={StaticResource symStringToNumberConverter}, Mode=TwoWay}">
                        <ComboBoxItem Content="8"/>
                        <ComboBoxItem Content="9"/>
                        <ComboBoxItem Content="10"/>
                        <ComboBoxItem Content="11"/>
                        <ComboBoxItem Content="12"/>
                        <ComboBoxItem Content="13"/>
                        <ComboBoxItem Content="14"/>
                        <ComboBoxItem Content="15"/>
                        <ComboBoxItem Content="16"/>
                        <ComboBoxItem Content="17"/>
                        <ComboBoxItem Content="18"/>
                    </fp:EditableDoubleComboBox>

                    <StackPanel.ToolTip>
                        <StackPanel>
                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double TimeTickFontSize { get; set; }</TextBlock>
                            <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                            <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart TimeTickFontSize=&quot;<Run Text="{Binding Source={x:Reference timeTickFontSize} , Path=SelectedValue}"/>&quot;/&gt;</TextBlock>
                        </StackPanel>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                    <TextBlock VerticalAlignment="Center"><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_PriceTickFontSize" RequestNavigate="Hyperlink_RequestNavigate">PriceTickFontSize</Hyperlink> =&#160;</TextBlock>
                    <fp:EditableDoubleComboBox x:Name="priceTickFontSize"
                                               MinValue="0" VerticalAlignment="Bottom"
                                               Text="{Binding ElementName=myCandleChart, Path=PriceTickFontSize, Converter={StaticResource symStringToNumberConverter}, Mode=TwoWay}">
                        <ComboBoxItem Content="8"/>
                        <ComboBoxItem Content="9"/>
                        <ComboBoxItem Content="10"/>
                        <ComboBoxItem Content="11"/>
                        <ComboBoxItem Content="12"/>
                        <ComboBoxItem Content="13"/>
                        <ComboBoxItem Content="14"/>
                        <ComboBoxItem Content="15"/>
                        <ComboBoxItem Content="16"/>
                        <ComboBoxItem Content="17"/>
                        <ComboBoxItem Content="18"/>
                    </fp:EditableDoubleComboBox>
                    <StackPanel.ToolTip>
                        <StackPanel>
                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double PriceTickFontSize { get; set; }</TextBlock>
                            <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                            <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart PriceTickFontSize=&quot;<Run Text="{Binding Source={x:Reference priceTickFontSize} , Path=SelectedValue}"/>&quot;/&gt;</TextBlock>
                        </StackPanel>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                    <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_ChartAreaBackground" RequestNavigate="Hyperlink_RequestNavigate">ChartAreaBackground</Hyperlink> =&#160;#</TextBlock>
                    <fp:Hex8DigitTextBox x:Name="chartAreaBackground" Width="70"
                                         Text="{Binding ElementName=myCandleChart, Path=ChartAreaBackground, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                    <StackPanel.ToolTip>
                        <StackPanel>
                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush ChartAreaBackground { get; set; }</TextBlock>
                            <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                            <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart ChartAreaBackground=&quot;<Run Text="{Binding Source={x:Reference chartAreaBackground} , Path=Text}"/>&quot;/&gt;</TextBlock>
                        </StackPanel>
                    </StackPanel.ToolTip>
                </StackPanel>

                <!-- Disabling -->
                <Expander Header="Disabling" Margin=" 0 10 0 0">
                    <StackPanel Style="{StaticResource ExpanderContent}">
                        
                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://docs.microsoft.com/en-us/dotnet/api/system.windows.uielement.isenabled?view=netframework-4.8" RequestNavigate="Hyperlink_RequestNavigate">IsEnabled</Hyperlink> =&#160;</TextBlock>
                            <CheckBox x:Name="isEnabled" IsChecked="True"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public bool IsEnabled { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart IsEnabled=&quot;<Run Text="{Binding Source={x:Reference isEnabled} , Path=IsChecked}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_DisabledFill" RequestNavigate="Hyperlink_RequestNavigate">DisabledFill</Hyperlink> =&#160;#</TextBlock>
                            <fp:Hex8DigitTextBox x:Name="disabledFill"  Width="70"
                                                 IsEnabled="{Binding ElementName=isEnabled, Path=IsChecked, Converter={StaticResource notBoolConverter}, Mode=OneWay}"
                                                 Text="{Binding ElementName=myCandleChart, Path=DisabledFill, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush DisabledFill { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart DisabledFill=&quot;<Run Text="{Binding Source={x:Reference disabledFill} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>
                    </StackPanel>
                </Expander>

                <!-- Setting the visible candles range via special methods -->
                <Expander Header="Setting the range of visible candles via special methods">
                    <StackPanel Style="{StaticResource ExpanderContent}">
                        <GroupBox HorizontalAlignment="Left"  Style="{StaticResource WithHelpTT}">
                            <GroupBox.Header>
                                <Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_SetVisibleCandlesRangeCenter_System_DateTime_" RequestNavigate="Hyperlink_RequestNavigate">void SetVisibleCandlesRangeCenter(DateTime)</Hyperlink>
                            </GroupBox.Header>
                            
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource LeftTopMargin}">
                                    <TextBlock HorizontalAlignment="Center">date</TextBlock>
                                    <Calendar x:Name="centralDate" FirstDayOfWeek="Monday" IsTodayHighlighted="False" SelectedDate="8/01/2019"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource LeftTopMargin}">
                                    <TextBlock HorizontalAlignment="Center">hours</TextBlock>
                                    <ComboBox x:Name="centralHour" SelectedValuePath="." SelectedIndex="10" VerticalAlignment="Top" 
                                              ItemsSource="{Binding Source={StaticResource hoursProvider}}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource LeftTopMargin}">
                                    <TextBlock HorizontalAlignment="Center">minutes</TextBlock>
                                    <ComboBox x:Name="centralMinute" SelectedValuePath="." SelectedIndex="0" VerticalAlignment="Top" 
                                              ItemsSource="{Binding Source={StaticResource minutesProvider}}"/>
                                </StackPanel>
                                <Button Content="Go" Click="SetVisibleCandlesRangeByCenter" VerticalAlignment="Center" Padding="10" Margin="10"/>
                            </StackPanel>

                            <GroupBox.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public void SetVisibleCandlesRangeCenter(DateTime visibleCandlesRangeCenter)</TextBlock>
                                    <TextBlock >Shifts the range of visible candles to the position where the t property of the central visible candle is equal (or closest) to specified value.</TextBlock>
                                </StackPanel>
                            </GroupBox.ToolTip>
                        </GroupBox>

                        <GroupBox HorizontalAlignment="Left"  Style="{StaticResource WithHelpTT}">
                            <GroupBox.Header>
                                <Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_SetVisibleCandlesRangeBounds_System_DateTime_System_DateTime_" RequestNavigate="Hyperlink_RequestNavigate">void SetVisibleCandlesRangeBounds(DateTime,DateTime)</Hyperlink>
                            </GroupBox.Header>
                            
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource LeftTopMargin}">
                                    <TextBlock HorizontalAlignment="Center">FROM: date</TextBlock>
                                    <Calendar x:Name="date0" FirstDayOfWeek="Monday" IsTodayHighlighted="False" SelectedDate="8/01/2019"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource LeftTopMargin}">
                                    <TextBlock HorizontalAlignment="Center">hours</TextBlock>
                                    <ComboBox x:Name="hour0" SelectedValuePath="." SelectedIndex="10" VerticalAlignment="Top" 
                                              ItemsSource="{Binding Source={StaticResource hoursProvider}}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource LeftTopMargin}">
                                    <TextBlock HorizontalAlignment="Center">minutes</TextBlock>
                                    <ComboBox x:Name="minute0" SelectedValuePath="." SelectedIndex="0" VerticalAlignment="Top" 
                                              ItemsSource="{Binding Source={StaticResource minutesProvider}}"/>
                                </StackPanel>
                                <TextBlock>&#160;&#160;&#160;&#160;</TextBlock>
                                <StackPanel Style="{StaticResource LeftTopMargin}">
                                    <TextBlock HorizontalAlignment="Center">TO: date</TextBlock>
                                    <Calendar x:Name="date1" FirstDayOfWeek="Monday" IsTodayHighlighted="False" SelectedDate="8/01/2019"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource LeftTopMargin}">
                                    <TextBlock HorizontalAlignment="Center">hours</TextBlock>
                                    <ComboBox x:Name="hour1" SelectedValuePath="." SelectedIndex="10" VerticalAlignment="Top" 
                                              ItemsSource="{Binding Source={StaticResource hoursProvider}}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource LeftTopMargin}">
                                    <TextBlock HorizontalAlignment="Center">minutes</TextBlock>
                                    <ComboBox x:Name="minute1" SelectedValuePath="." SelectedIndex="0" VerticalAlignment="Top" 
                                              ItemsSource="{Binding Source={StaticResource minutesProvider}}"/>
                                </StackPanel>
                                <Button Click="SetVisibleCandlesRangeByBounds" VerticalAlignment="Center" Padding="10" Margin="10">Go!</Button>
                            </StackPanel>

                            <GroupBox.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public void SetVisibleCandlesRangeBounds(DateTime lowerBound, DateTime upperBound)</TextBlock>
                                    <TextBlock>Sets the range of visible candles, that starts and ends at specified moments in time.</TextBlock>
                                </StackPanel>
                            </GroupBox.ToolTip>
                        </GroupBox>
                    </StackPanel>
                </Expander>

                <!-- Price Chart -->
                <Expander Header="Price Chart">
                    <StackPanel Style="{StaticResource ExpanderContent}">

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_PriceChartTopMargin" RequestNavigate="Hyperlink_RequestNavigate">PriceChartTopMargin</Hyperlink> =&#160;</TextBlock>
                            <fp:DoubleTextBox x:Name="priceChartTopMargin" 
                                              Text="{Binding ElementName=myCandleChart, Path=PriceChartTopMargin, Converter={StaticResource symStringToNumberConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double PriceChartTopMargin { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart PriceChartTopMargin=&quot;<Run Text="{Binding Source={x:Reference priceChartTopMargin} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_PriceChartBottomMargin" RequestNavigate="Hyperlink_RequestNavigate">PriceChartBottomMargin</Hyperlink> =&#160;</TextBlock>
                            <fp:DoubleTextBox x:Name="priceChartBottomMargin" 
                                              Text="{Binding ElementName=myCandleChart, Path=PriceChartBottomMargin, Converter={StaticResource symStringToNumberConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double PriceChartBottomMargin { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart PriceChartBottomMargin=&quot;<Run Text="{Binding Source={x:Reference priceChartBottomMargin} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_BullishCandleFill" RequestNavigate="Hyperlink_RequestNavigate">BullishCandleFill</Hyperlink> =&#160;#</TextBlock>
                            <fp:Hex8DigitTextBox x:Name="bullishCandleFill" Width="70"
                                                 Text="{Binding ElementName=myCandleChart, Path=BullishCandleFill, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush BullishCandleFill { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart BullishCandleFill=&quot;<Run Text="{Binding Source={x:Reference bullishCandleFill} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_BullishCandleStroke" RequestNavigate="Hyperlink_RequestNavigate">BullishCandleStroke</Hyperlink> =&#160;#</TextBlock>
                            <fp:Hex8DigitTextBox x:Name="bullishCandleStroke" Width="70"
                                                 Text="{Binding ElementName=myCandleChart, Path=BullishCandleStroke, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush BullishCandleStroke { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart BullishCandleStroke=&quot;<Run Text="{Binding Source={x:Reference bullishCandleStroke} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_BearishCandleFill" RequestNavigate="Hyperlink_RequestNavigate">BearishCandleFill</Hyperlink> =&#160;#</TextBlock>
                            <fp:Hex8DigitTextBox x:Name="bearishCandleFill" Width="70"
                                                 Text="{Binding ElementName=myCandleChart, Path=BearishCandleFill, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush BearishCandleFill { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart BearishCandleFill=&quot;<Run Text="{Binding Source={x:Reference bearishCandleFill} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_BearishCandleStroke" RequestNavigate="Hyperlink_RequestNavigate">BearishCandleStroke</Hyperlink> =&#160;#</TextBlock>
                            <fp:Hex8DigitTextBox x:Name="bearishCandleStroke" Width="70"
                                                 Text="{Binding ElementName=myCandleChart, Path=BearishCandleStroke, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush BearishCandleStroke { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart BearishCandleStroke=&quot;<Run Text="{Binding Source={x:Reference bearishCandleStroke} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                    </StackPanel>
                </Expander>

                <!-- Volume Histogram -->
                <Expander Header="Volume Histogram">
                    <StackPanel Style="{StaticResource ExpanderContent}">

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_IsVolumePanelVisible" RequestNavigate="Hyperlink_RequestNavigate">IsVolumePanelVisible</Hyperlink> =&#160;</TextBlock>
                            <CheckBox x:Name="isVolumePanelVisible" 
                                      IsChecked="{Binding ElementName=myCandleChart, Path=IsVolumePanelVisible, Mode=TwoWay}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public bool IsVolumePanelVisible { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart IsVolumePanelVisible=&quot;<Run Text="{Binding Source={x:Reference isVolumePanelVisible} , Path=IsChecked}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_VolumeHistogramTopMargin" RequestNavigate="Hyperlink_RequestNavigate">VolumeHistogramTopMargin</Hyperlink> =&#160;</TextBlock>
                            <fp:DoubleTextBox x:Name="volumeHistogramTopMargin" IsEnabled="{Binding ElementName=isVolumePanelVisible, Path=IsChecked}"
                                              Text="{Binding ElementName=myCandleChart, Path=VolumeHistogramTopMargin, Converter={StaticResource symStringToNumberConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double VolumeHistogramTopMargin { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart VolumeHistogramTopMargin=&quot;<Run Text="{Binding Source={x:Reference volumeHistogramTopMargin} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_VolumeHistogramBottomMargin" RequestNavigate="Hyperlink_RequestNavigate">VolumeHistogramBottomMargin</Hyperlink> =&#160;</TextBlock>
                            <fp:DoubleTextBox x:Name="volumeHistogramBottomMargin" IsEnabled="{Binding ElementName=isVolumePanelVisible, Path=IsChecked}"
                                              Text="{Binding ElementName=myCandleChart, Path=VolumeHistogramBottomMargin, Converter={StaticResource symStringToNumberConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double VolumeHistogramBottomMargin { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart VolumeHistogramBottomMargin=&quot;<Run Text="{Binding Source={x:Reference volumeHistogramBottomMargin} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_VolumeBarWidthToCandleWidthRatio" RequestNavigate="Hyperlink_RequestNavigate">VolumeBarWidthToCandleWidthRatio</Hyperlink> =&#160;</TextBlock>
                            <fp:DoubleTextBox x:Name="volumeBarWidthToCandleWidthRatio" IsEnabled="{Binding ElementName=isVolumePanelVisible, Path=IsChecked}"
                                              Text="{Binding ElementName=myCandleChart, Path=VolumeBarWidthToCandleWidthRatio, Converter={StaticResource symStringToNumberConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              MinValue="0.0" MaxValue="1.0"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double VolumeBarWidthToCandleWidthRatio { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart VolumeBarWidthToCandleWidthRatio=&quot;<Run Text="{Binding Source={x:Reference volumeBarWidthToCandleWidthRatio} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_BullishVolumeBarFill" RequestNavigate="Hyperlink_RequestNavigate">BullishVolumeBarFill</Hyperlink> =&#160;#</TextBlock>
                            <fp:Hex8DigitTextBox x:Name="bullishVolumeBarFill" Width="70"
                                                 Text="{Binding ElementName=myCandleChart, Path=BullishVolumeBarFill, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush BullishVolumeBarFill { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart BullishVolumeBarFill=&quot;<Run Text="{Binding Source={x:Reference bullishVolumeBarFill} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_BearishVolumeBarFill" RequestNavigate="Hyperlink_RequestNavigate">BearishVolumeBarFill</Hyperlink> =&#160;#</TextBlock>
                            <fp:Hex8DigitTextBox x:Name="bearishVolumeBarFill" Width="70"
                                                 Text="{Binding ElementName=myCandleChart, Path=BearishVolumeBarFill, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double BearishVolumeBarFill { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart BearishVolumeBarFill=&quot;<Run Text="{Binding Source={x:Reference bearishVolumeBarFill} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                    </StackPanel>
                </Expander>

                <!-- Legend -->
                <Expander Header="Legend">
                    <StackPanel Style="{StaticResource ExpanderContent}">

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_LegendText" RequestNavigate="Hyperlink_RequestNavigate">LegendText</Hyperlink> =&#160;</TextBlock>
                            <TextBox x:Name="legendText" Width="150"
                                     Text="{Binding Path=Ticker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public string LegendText { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart LegendText=&quot;<Run Text="{Binding Source={x:Reference legendText} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_LegendMargin" RequestNavigate="Hyperlink_RequestNavigate">LegendMargin</Hyperlink> =&#160;</TextBlock>
                            <fp:NumbersAndSpacesTextBox x:Name="legendMargin" Width="110"
                                                        Text="{Binding ElementName=myCandleChart, Path=LegendMargin, Converter={StaticResource symStringThicknessConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(LEFT TOP RIGHT BOTTOM)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Thickness LegendMargin { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart LegendMargin=&quot;<Run Text="{Binding Source={x:Reference legendMargin} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock VerticalAlignment="Center"><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_LegendFontSize" RequestNavigate="Hyperlink_RequestNavigate">LegendFontSize</Hyperlink> =&#160;</TextBlock>
                            <fp:EditableDoubleComboBox x:Name="legendFontSize" MinValue="0" VerticalAlignment="Bottom"
                                                       Text="{Binding ElementName=myCandleChart, Path=LegendFontSize, Converter={StaticResource symStringToNumberConverter}, Mode=TwoWay}">
                                <ComboBoxItem Content="10"/>
                                <ComboBoxItem Content="12"/>
                                <ComboBoxItem Content="14"/>
                                <ComboBoxItem Content="16"/>
                                <ComboBoxItem Content="18"/>
                                <ComboBoxItem Content="20"/>
                                <ComboBoxItem Content="22"/>
                                <ComboBoxItem Content="24"/>
                                <ComboBoxItem Content="26"/>
                                <ComboBoxItem Content="28"/>
                                <ComboBoxItem Content="30"/>
                                <ComboBoxItem Content="32"/>
                                <ComboBoxItem Content="34"/>
                            </fp:EditableDoubleComboBox>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double LegendFontSize { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart LegendFontSize=&quot;<Run Text="{Binding Source={x:Reference legendFontSize} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock VerticalAlignment="Center"><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_LegendHorizontalAlignment" RequestNavigate="Hyperlink_RequestNavigate">LegendHorizontalAlignment</Hyperlink> =&#160;</TextBlock>
                            <ComboBox x:Name="legendHorizontalAlignment" IsEditable="False" 
                                      SelectedValue="{Binding ElementName=myCandleChart, Path=LegendHorizontalAlignment, Mode=TwoWay}"
                                      ItemsSource="{Binding Source={StaticResource allHorizontalAlignmentValues}}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public HorizontalAlignment LegendHorizontalAlignment { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart LegendHorizontalAlignment=&quot;<Run Text="{Binding Source={x:Reference legendHorizontalAlignment} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock VerticalAlignment="Center"><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_LegendVerticalAlignment" RequestNavigate="Hyperlink_RequestNavigate">LegendVerticalAlignment</Hyperlink> =&#160;</TextBlock>
                            <ComboBox x:Name="legendVerticalAlignment" IsEditable="False" 
                                      SelectedValue="{Binding ElementName=myCandleChart, Path=LegendVerticalAlignment, Mode=TwoWay}"
                                      ItemsSource="{Binding Source={StaticResource allVerticalAlignmentValues}}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public VerticalAlignment LegendVerticalAlignment { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart LegendVerticalAlignment=&quot;<Run Text="{Binding Source={x:Reference legendVerticalAlignment} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock VerticalAlignment="Center"><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_LegendFontWeight" RequestNavigate="Hyperlink_RequestNavigate">LegendFontWeight</Hyperlink> =&#160;</TextBlock>
                            <ComboBox x:Name="legendFontWeight"
                                      SelectedValue="{Binding ElementName=myCandleChart, Path=LegendFontWeight, Mode=TwoWay}">
                                <FontWeight>Light</FontWeight>
                                <FontWeight>Normal</FontWeight>
                                <FontWeight>Bold</FontWeight>
                                <FontWeight>ExtraBold</FontWeight>
                            </ComboBox>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public FontWeight LegendFontWeight { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart LegendFontWeight=&quot;<Run Text="{Binding Source={x:Reference legendFontWeight} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_LegendForeground" RequestNavigate="Hyperlink_RequestNavigate">LegendForeground</Hyperlink> =&#160;#</TextBlock>
                            <fp:Hex8DigitTextBox x:Name="legendForeground" Width="70"
                                                 Text="{Binding ElementName=myCandleChart, Path=LegendForeground, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush LegendForeground { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart LegendForeground=&quot;<Run Text="{Binding Source={x:Reference legendForeground} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                    </StackPanel>
                </Expander>

                <!-- Gridlines -->
                <Expander Header="Gridlines">
                    <StackPanel Style="{StaticResource ExpanderContent}">

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_IsHorizontalGridlinesEnabled" RequestNavigate="Hyperlink_RequestNavigate">IsHorizontalGridlinesEnabled</Hyperlink> =&#160;</TextBlock>
                            <CheckBox x:Name="isHorizontalGridlinesEnabled" 
                                      IsChecked="{Binding ElementName=myCandleChart, Path=IsHorizontalGridlinesEnabled, Mode=TwoWay}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public bool IsHorizontalGridlinesEnabled { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart IsHorizontalGridlinesEnabled=&quot;<Run Text="{Binding Source={x:Reference isHorizontalGridlinesEnabled} , Path=IsChecked}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_IsVerticalGridlinesEnabled" RequestNavigate="Hyperlink_RequestNavigate">IsVerticalGridlinesEnabled</Hyperlink> =&#160;</TextBlock>
                            <CheckBox x:Name="isVerticalGridlinesEnabled" 
                                      IsChecked="{Binding ElementName=myCandleChart, Path=IsVerticalGridlinesEnabled, Mode=TwoWay}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public bool IsVerticalGridlinesEnabled { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart IsVerticalGridlinesEnabled=&quot;<Run Text="{Binding Source={x:Reference isVerticalGridlinesEnabled} , Path=IsChecked}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_HideMinorVerticalGridlines" RequestNavigate="Hyperlink_RequestNavigate">HideMinorVerticalGridlines</Hyperlink> =&#160;</TextBlock>
                            <CheckBox x:Name="hideMinorVerticalGridlines" 
                                      IsChecked="{Binding ElementName=myCandleChart, Path=HideMinorVerticalGridlines, Mode=TwoWay}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public bool HideMinorVerticalGridlines { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart HideMinorVerticalGridlines=&quot;<Run Text="{Binding Source={x:Reference hideMinorVerticalGridlines} , Path=IsChecked}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_HorizontalGridlinesPen" RequestNavigate="Hyperlink_RequestNavigate">HorizontalGridlinesPen</Hyperlink> =&#160;</TextBlock>
                            <fp:PenSelector x:Name="horizontalGridlinesPen" SelectedPen="{Binding ElementName=myCandleChart, Path=HorizontalGridlinesPen, Mode=TwoWay}" />

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Pen HorizontalGridlinesPen { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart&gt;<LineBreak/>
                                    &#160;&#160;&#160;&#160;&lt;CandleChart.HorizontalGridlinesPen&gt;<LineBreak/>
                                    &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Pen Thickness=&quot;<Run Text="{Binding Source={x:Reference horizontalGridlinesPen}, Path=SelectedPen.Thickness}"/>&quot;
                                    Brush=&quot;<Run Text="{Binding Source={x:Reference horizontalGridlinesPen}, Path=SelectedPen.Brush}"/>&quot;/&gt;<LineBreak/>
                                    &#160;&#160;&#160;&#160;&lt;/CandleChart.HorizontalGridlinesPen&gt;<LineBreak/>
                                    &lt;/CandleChart&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_VerticalGridlinesPen" RequestNavigate="Hyperlink_RequestNavigate">VerticalGridlinesPen</Hyperlink> =&#160;</TextBlock>
                            <fp:PenSelector x:Name="verticalGridlinesPen" SelectedPen="{Binding ElementName=myCandleChart, Path=VerticalGridlinesPen, Mode=TwoWay}" />

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Pen VerticalGridlinesPen { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart&gt;<LineBreak/>
                                    &#160;&#160;&#160;&#160;&lt;CandleChart.VerticalGridlinesPen&gt;<LineBreak/>
                                    &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Pen Thickness=&quot;<Run Text="{Binding Source={x:Reference verticalGridlinesPen}, Path=SelectedPen.Thickness}"/>&quot;
                                    Brush=&quot;<Run Text="{Binding Source={x:Reference verticalGridlinesPen}, Path=SelectedPen.Brush}"/>&quot;/&gt;<LineBreak/>
                                    &#160;&#160;&#160;&#160;&lt;/CandleChart.VerticalGridlinesPen&gt;<LineBreak/>
                                    &lt;/CandleChart&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                    </StackPanel>
                </Expander>

                <!-- Cross -->
                <Expander Header="Cross">
                    <StackPanel Style="{StaticResource ExpanderContent}">

                        <GroupBox Header="Cross lines" HorizontalAlignment="Left">
                            <StackPanel Style="{StaticResource LeftMargin}">
                                <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                                    <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_IsCrossLinesVisible" RequestNavigate="Hyperlink_RequestNavigate">IsCrossLinesVisible</Hyperlink> =&#160;</TextBlock>
                                    <CheckBox x:Name="isCrossLinesVisible" 
                                              IsChecked="{Binding ElementName=myCandleChart, Path=IsCrossLinesVisible, Mode=TwoWay}"/>

                                    <StackPanel.ToolTip>
                                        <StackPanel>
                                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public bool IsCrossLinesVisible { get; set; }</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart IsCrossLinesVisible=&quot;<Run Text="{Binding Source={x:Reference isCrossLinesVisible} , Path=IsChecked}"/>&quot;/&gt;</TextBlock>
                                        </StackPanel>
                                    </StackPanel.ToolTip>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                                    <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_CrossLinesBrush" RequestNavigate="Hyperlink_RequestNavigate">CrossLinesBrush</Hyperlink> =&#160;#</TextBlock>
                                    <fp:Hex8DigitTextBox x:Name="crossLinesBrush" Width="70"
                                                         Text="{Binding ElementName=myCandleChart, Path=CrossLinesBrush, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         IsEnabled="{Binding ElementName=isCrossLinesVisible, Path=IsChecked}"/>
                                    <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                                    <StackPanel.ToolTip>
                                        <StackPanel>
                                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush CrossLinesBrush { get; set; }</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart CrossLinesBrush=&quot;<Run Text="{Binding Source={x:Reference crossLinesBrush} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                        </StackPanel>
                                    </StackPanel.ToolTip>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Cross price" HorizontalAlignment="Left">
                            <StackPanel Style="{StaticResource LeftMargin}">
                                <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                                    <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_IsCrossPriceVisible" RequestNavigate="Hyperlink_RequestNavigate">IsCrossPriceVisible</Hyperlink> =&#160;</TextBlock>
                                    <CheckBox x:Name="isCrossPriceVisible" 
                                              IsChecked="{Binding ElementName=myCandleChart, Path=IsCrossPriceVisible, Mode=TwoWay}"/>

                                    <StackPanel.ToolTip>
                                        <StackPanel>
                                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public bool IsCrossPriceVisible { get; set; }</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart IsCrossPriceVisible=&quot;<Run Text="{Binding Source={x:Reference isCrossPriceVisible} , Path=IsChecked}"/>&quot;/&gt;</TextBlock>
                                        </StackPanel>
                                    </StackPanel.ToolTip>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                                    <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_CrossPriceForeground" RequestNavigate="Hyperlink_RequestNavigate">CrossPriceForeground</Hyperlink> =&#160;#</TextBlock>
                                    <fp:Hex8DigitTextBox x:Name="crossPriceForeground" Width="70"
                                                         Text="{Binding ElementName=myCandleChart, Path=CrossPriceForeground, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         IsEnabled="{Binding ElementName=isCrossPriceVisible, Path=IsChecked}"/>
                                    <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                                    <StackPanel.ToolTip>
                                        <StackPanel>
                                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush CrossPriceForeground { get; set; }</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart CrossPriceForeground=&quot;<Run Text="{Binding Source={x:Reference crossPriceForeground} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                        </StackPanel>
                                    </StackPanel.ToolTip>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                                    <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_CrossPriceBackground" RequestNavigate="Hyperlink_RequestNavigate">CrossPriceBackground</Hyperlink> =&#160;#</TextBlock>
                                    <fp:Hex8DigitTextBox x:Name="crossPriceBackground" Width="70"
                                                         Text="{Binding ElementName=myCandleChart, Path=CrossPriceBackground, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         IsEnabled="{Binding ElementName=isCrossPriceVisible, Path=IsChecked}"/>
                                    <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                                    <StackPanel.ToolTip>
                                        <StackPanel>
                                            <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush CrossPriceBackground { get; set; }</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                            <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart CrossPriceBackground=&quot;<Run Text="{Binding Source={x:Reference crossPriceBackground} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                        </StackPanel>
                                    </StackPanel.ToolTip>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Expander>

                <!-- Horizontal ScrollBar -->
                <Expander Header="Horizontal ScrollBar">
                    <StackPanel Style="{StaticResource ExpanderContent}">
                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_ScrollBarBackground" RequestNavigate="Hyperlink_RequestNavigate">ScrollBarBackground</Hyperlink> =&#160;#</TextBlock>
                            <fp:Hex8DigitTextBox x:Name="scrollBarBackground" Width="70"
                                                 Text="{Binding ElementName=myCandleChart, Path=ScrollBarBackground, Converter={StaticResource symColorBrushStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock>&#160;(Hex #AARRGGBB format)</TextBlock>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public Brush ScrollBarBackground { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart ScrollBarBackground=&quot;<Run Text="{Binding Source={x:Reference scrollBarBackground} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Style="{StaticResource WithHelpTT}">
                            <TextBlock><Hyperlink NavigateUri="https://gellerda.github.io/FancyCandles/api/FancyCandles.CandleChart.html#FancyCandles_CandleChart_ScrollBarHeight" RequestNavigate="Hyperlink_RequestNavigate">ScrollBarHeight</Hyperlink> =&#160;</TextBlock>
                            <fp:DoubleTextBox x:Name="scrollBarHeight" 
                                              Text="{Binding ElementName=myCandleChart, Path=ScrollBarHeight, Converter={StaticResource symStringToNumberConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <StackPanel.ToolTip>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource textblockHelpTTTitle}">public double ScrollBarHeight { get; set; }</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCodeSubTitle}">XAML example:</TextBlock>
                                    <TextBlock Style="{StaticResource textblockHelpTTCode}">&lt;fc:CandleChart ScrollBarHeight=&quot;<Run Text="{Binding Source={x:Reference scrollBarHeight} , Path=Text}"/>&quot;/&gt;</TextBlock>
                                </StackPanel>
                            </StackPanel.ToolTip>
                        </StackPanel>
                    </StackPanel>
                </Expander>

            </StackPanel>
        </ScrollViewer>

    </Grid>
</Window>
